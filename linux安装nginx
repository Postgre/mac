1.下载
 wget https://www.openssl.org/source/openssl-1.0.2l.tar.gz
 wget https://jaist.dl.sourceforge.net/project/libpng/zlib/1.2.11/zlib-1.2.11.tar.gz
 wget https://ftp.pcre.org/pub/pcre/pcre-8.41.tar.gz
 wget http://nginx.org/download/nginx-1.12.1.tar.gz
 
2.安装c++
  yum install -y gcc gcc-c++
3.安装openssl,zlib,pcre,nginx
  tar -zxvf  openssl-1.0.2l.tar.gz
  cd openssl-1.0.2l
  ./config
  make
  make install
  
  tar -zxvf  zlib-1.2.11.tar.gz
  cd zlib-1.2.11
  ./configure
  make
  make install
  
  tar -zxvf  pcre-8.41.tar.gz
  cd pcre-8.41
  ./configure
  make
  make install
  
  tar -zxvf nginx-1.12.1.tar.gz
  tar -zxvf nginx-1.12.1
  ./configure --with-pcre=../pcre-8.41/ --with-zlib=../zlib-1.2.11/ --with-openssl=../openssl-1.0.2l
  make
  make install
3.监测是否安装成功  
  cd /usr/local/nginx/sbin/
　./nginx -t
5.启动nginx
 ./nginx
 netstat -ntlp 
6.创建nginx启动脚本
 cd /etc/init.d/
 vim ngix
 输入以下脚本内容：
  #!/bin/sh 
  # 
  # nginx - this script starts and stops the nginx daemon 
  # 
  # chkconfig: - 85 15 
  # description: Nginx is an HTTP(S) server, HTTP(S) reverse \ 
  #   proxy and IMAP/POP3 proxy server 
  # processname: nginx 
  # config: /etc/nginx/nginx.conf 
  # config: /etc/sysconfig/nginx 
  # pidfile: /var/run/nginx.pid 
  # Source function library. 
  . /etc/rc.d/init.d/functions 
  # Source networking configuration. 
  . /etc/sysconfig/network 
  # Check that networking is up. 
  [ "$NETWORKING" = "no" ] && exit 0 
      nginx="/usr/local/nginx/sbin/nginx" 
      prog=$(basename $nginx) 
      NGINX_CONF_FILE="/usr/local/nginx/conf/nginx.conf" 
  [ -f /etc/sysconfig/nginx ] && . /etc/sysconfig/nginx 
      lockfile=/var/lock/subsys/nginx 

  start() { 
      [ -x $nginx ] || exit 5 
      [ -f $NGINX_CONF_FILE ] || exit 6 
      echo -n $"Starting $prog: " 
      daemon $nginx -c $NGINX_CONF_FILE 
      retval=$? 
      echo 
  [ $retval -eq 0 ] && touch $lockfile 
      return $retval 
  } 

  stop() { 
      echo -n $"Stopping $prog: " 
      killproc $prog -QUIT 
      retval=$? 
      echo 
  [ $retval -eq 0 ] && rm -f $lockfile 
      return $retval 
      killall -9 nginx 
  } 

  restart() { 
      configtest || return $? 
      stop 
      sleep 1 
      start 
  } 

  reload() { 
      configtest || return $? 
      echo -n $"Reloading $prog: " 
      killproc $nginx -HUP 
      RETVAL=$? 
      echo 
  } 

  force_reload() { 
      restart 
  } 

  configtest() { 
      $nginx -t -c $NGINX_CONF_FILE 
  } 

  rh_status() { 
      status $prog 
  } 

  rh_status_q() { 
      rh_status >/dev/null 2>&1 
  } 

  case "$1" in 
      start) 
          rh_status_q && exit 0 
          $1 
      ;; 
      stop) 
          rh_status_q || exit 0 
          $1 
      ;; 
      restart|configtest) 
          $1 
      ;; 
      reload) 
          rh_status_q || exit 7 
          $1 
      ;; 
      force-reload) 
          force_reload 
      ;; 
      status) 
          rh_status 
      ;; 
      condrestart|try-restart) 
          rh_status_q || exit 0 
      ;; 
      *) 
          echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload|configtest}" 
          exit 2 
  esac
7.修改脚本权限
 chmod 755 nginx
8.将脚本文件加入到chkconfig中
 chkconfig --add nginx
9.设置nginx开机在3和5级别自动启动
 chkconfig --level 35 nginx on
10.测试nginx脚本文件是否能够正常使用
 service nginx restart
 service nginx reload
 service nginx stop
