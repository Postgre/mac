# 1、添加MySQL Yum源
使用MySQL官方提供的Yum源，包含了最新的MySQL server。
CentOS 7
wget http://dev.mysql.com/get/mysql57-community-release-el7-7.noarch.rpm
CentOS 6
wget http://dev.mysql.com/get/mysql57-community-release-el6-7.noarch.rpm
# 2、安装下载的rpm包
CentOS 7
yum -y localinstall mysql57-community-release-el7-7.noarch.rpm
CentOS 6
yum -y localinstall mysql57-community-release-el6-7.noarch.rpm
# 3、验证rpm包是否安装成功
yum repolist enabled | grep "mysql.*-community.*"
# 4、安装最新的MySQL
yum -y install mysql-community-server
# 5、初始化数据库
mysqld --user=mysql --initialize
# 6、启动并修改root密码
启动
启动MySQL需要分两种情况
实体物理机：service mysqld start
CentOS Docker镜像：mysqld --user=mysql &
（两种启动方式不同的原因在于该CentOS镜像为精简版，有很多包再制作的过程中没有安装。故导致systemctl命令无法启动）
MySQL初始化之后，会生成一个临时的root密码，
可以通过
grep 'temporary password' /var/log/mysqld.log
中获取，通过该密码登录之后，第一步需要先修改root密码
ALTER USER 'root'@'localhost' IDENTIFIED BY 'admin';
# 7、通过SHOW VARIABLES LIKE 'character_set_%'; 查看MySQL字符集情况
# 8、通过whereis my.cnf; 查看mysql的配置文件位置
    # 修改处1：添加以下2行  
    [client]  
    default-character-set=utf8  

    [mysqld]  
    #skip-grant-tables  
    #skip-networking  
    #  
    # Remove leading # and set to the amount of RAM for the most important data  
    # cache in MySQL. Start at 70% of total RAM for dedicated server, else 10%.  
    # innodb_buffer_pool_size = 128M  
    #  
    # Remove leading # to turn on a very important data integrity option: logging  
    # changes to the binary log between backups.  
    # log_bin  
    #  
    # Remove leading # to set options mainly useful for reporting servers.  
    # The server defaults are faster for transactions and fast SELECTs.  
    # Adjust sizes as needed, experiment to find the optimal values.  
    # join_buffer_size = 128M  
    # sort_buffer_size = 2M  
    # read_rnd_buffer_size = 2M  
    datadir=/var/lib/mysql  
    socket=/var/lib/mysql/mysql.sock  

    # Disabling symbolic-links is recommended to prevent assorted security risks  
    symbolic-links=0  

    log-error=/var/log/mysqld.log  
    pid-file=/var/run/mysqld/mysqld.pid  

    # 修改处2：添加以下3行  
    default-storage-engine=INNODB  
    character-set-server=utf8  
    collation-server=utf8_general_ci  
# 9、增加新用户。(注意：mysql环境中的命令后面都带一个分号作为命令结束符)
　　grant all privileges on *.* to 用户名@'%' identified by '密码' with grant option;
　　flush privileges;(刷新权限设置)
  
# 10、修改密码失败
--validate-password=ON/OFF/FORCE/FORCE_PLUS_PERMANENT:决定是否使用该插件(及强制/永久强制使用)。
validate_password_dictionary_file：插件用于验证密码强度的字典文件路径。
validate_password_length：密码最小长度。
validate_password_mixed_case_count：密码至少要包含的小写字母个数和大写字母个数。
validate_password_number_count：密码至少要包含的数字个数。
validate_password_policy：密码强度检查等级，0/LOW、1/MEDIUM、2/STRONG。
validate_password_special_char_count：密码至少要包含的特殊字符数。
其中关于validate_password_policy-密码强度检查等级：
0/LOW：只检查长度。
1/MEDIUM：检查长度、数字、大小写、特殊字符。
2/STRONG：检查长度、数字、大小写、特殊字符字典文件。

# 11、主从复制
(1)主mysql的my.cnf:
#设置二进制日志
sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES
log_bin=mysqlbin-log
server_id=1
innodb_flush_log_at_trx_commit=1
sync_binlog=1
log-slave-updates
(2)从mysql的my.cnf:
sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLE
log-bin=mysql-bin
server_id=2
log-slave-updates
(3)主mysql:
mysql>GRANT REPLICATION SLAVE ON *.* TO ‘mysql140’@‘10.10.1.140’ IDENTIFIED BY ‘mysql140’;
mysql>FLUSH PRIVILEGES;
mysql>show master status;
(4)从mysql:
mysql>CHANGE MASTER TO
     >MASTER_HOST=’10.10.1.139’,
     >MASTER_USER=’mysql140’,
     >MASTER_PASSWORD=’mysql140’,
     >MASTER_LOG_FILE=’mysqlbin-log.000001’,
     >MASTER_LOG_POS=154;
mysql>show slave status \G;
mysql>start slave;

#12、主主复制
-- 10.10.1.140
GRANT REPLICATION SLAVE ON *.* TO 'mysql139'@'10.10.1.139' IDENTIFIED BY 'mysql139';
flush privileges;
change master to master_host='10.10.1.139',master_user='mysql140',master_password='mysql140',master_log_file='mysql-bin.000001',master_log_pos=154;

-- 10.10.1.139
GRANT REPLICATION SLAVE ON *.* TO 'mysql140'@'10.10.1.140' IDENTIFIED BY 'mysql140';
flush privileges;
change master to master_host='10.10.1.140',master_user='mysql139',master_password='mysql139',master_log_file='mysql-bin.000002',master_log_pos=154;

#13、haproxy安装
yum -y install haproxy
cd /etc/haproxy/
vi haproxy.cfg

#14、keepalived安装
yum -y install keepalived
cd /etc/keepalived/
vi keepalived.conf
